@model otr_project.Models.ItemModel

@{
    ViewBag.Title = "Rambla | Edit " + Model.Name;
}

@{
    var categoryList = Session["CategoryId"] as SelectList;
    var agreementList = Session["AgreementId"] as SelectList;
    var regionList = Session["RegionId"] as SelectList;
}

@using (Html.BeginForm("Edit", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="container_12">
        <div class="header_to_body_gap"></div>
        <div class="grid_12">
            <div id="Edit_Item_Title" class="title_container">
                <div id="btn_delete_item">
                    @Html.ActionLink("Delete Item", "Delete", new { id = Model.Id })
                </div>
                <h1>
                    Edit your item
                </h1>
                <h2 id="Edit_Item_Subtitle" class="page_subtitle">
                    Rambla allows you to make money from your item without having to sell it!
                </h2>
            </div>
            <div id="edit-item-container" class="container">
                @Html.ValidationSummary(true, "Oops. Looks like we have had some trouble. Please correct the errors and try again.")
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <div class="header_background">
                                    <h2 class="box_header">
                                        Item Details
                                    </h2>
                                </div>
                            </td>
                            <td class="right_col">
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div id="Item_Details_Box" class="form_background">
                                    @Html.HiddenFor(model => model.Id)
                                    @Html.HiddenFor(model => model.UserModelEmail)
                                    @Html.HiddenFor(model => model.ImageCount)
                                    @Html.HiddenFor(model => model.DateCreated)
                                    <!--@Html.ValidationMessageFor(model => model.DateCreated)-->
        
                                    <!--div class="editor-label">
                                        @Html.LabelFor(model => model.Name)
                                    </div-->
                                    <div class="form_field">
                                        @Html.TextBoxFor(model => model.Name, new { placeholder = "Item" })
                                        @Html.ValidationMessageFor(model => model.Name)
                                    </div>

                                    <!--div class="editor-label">
                                        @Html.LabelFor(m => m.CategoryId)
                                    </div-->
                                    <div class="form_dropdown">
                                        @Html.DropDownList("CategoryId", categoryList, "Category", new { onchange = "CategoryColour()" })
                                        @Html.ValidationMessageFor(m => m.CategoryId)
                                    </div>
        
                                    <!--div class="editor-label">
                                        @Html.LabelFor(m => m.Desc)
                                    </div-->
                                    <div class="form_field">
                                        @Html.TextAreaFor(m => m.Desc, new { placeholder = "Description" })
                                        @Html.ValidationMessageFor(m => m.Desc)
                                    </div>
                                </div>

                                <!--div class="editor-label">
                                    @Html.LabelFor(m => m.AgreementId)
                                </div>
                                <div class="form_dropdown">
                                    @Html.DropDownList("AgreementId", agreementList, "Agreement", new { onchange = "AgreementColour()" })
                                    @Html.ValidationMessageFor(m => m.AgreementId)
                                </div-->
                            </td>
                            <td class="right_col">
                                <div class="form_background">
                                    <!--div class="header_background">
                                        <h2 class="box_header">
                                            Price/Day
                                        </h2>
                                    </div-->
                                    <div id="Price_Box">
                                        <!--div class="editor-label">
                                            @Html.LabelFor(m => m.CostPerDay)
                                        </div-->
                                        <div class="form_field">
                                            @Html.TextBoxFor(m => m.CostPerDay, new { placeholder = "Price/day (CAD) e.g. 20" })
                                            @Html.ValidationMessageFor(m => m.CostPerDay)
                                        </div>
                                    </div>
                                    <!--div class="header_background">
                                        <h2 class="box_header">
                                            Security Deposit
                                        </h2>
                                    </div-->
                                    <div id="Security_Deposit_Box">
                                        <!--div class="editor-label">
                                            @Html.LabelFor(m => m.SecurityDeposit)
                                        </div-->
                                        <div class="form_field">
                                            @Html.TextBoxFor(m => m.SecurityDeposit, new { placeholder = "Security Deposit (CAD) e.g. 400" })
                                            @Html.ValidationMessageFor(m => m.SecurityDeposit)
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div id="item_pictures">
                @{
                    if (Model.ItemImages.Count != 0)
                    {
                        int count = 0;
                        foreach (var i in Model.ItemImages)
                        {
                            count++;
                            <div class="item_thumbnail_container">
                                <img src="@Url.Content("~/Item/GetItemImage/" + i.Id)" id="image-@count" class="item_thumbnail"/>
                                <a id="DeleteImage" data_id="@count">
                                    Delete
                                </a>
                            </div>
                            <input id="ImageID-@count" type="hidden" value="@i.Id" />
                            <input id="ItemID-@count" type="hidden" value="@Model.Id" />
                        }
                        <div id="item_thumbnail_container_last"></div>
                    }
                    else
                    {
                        <p>
                            You've not uploaded any images of @Model.Name
                        </p>
                    }
                }
                </div>
                <div id="upload_item_picture">
                    <h3>
                        Upload a picture of your item
                    </h3>
                    <h3 class="de-emphasise">
                        (Images should be lesser than 500 KB. Acceptable formats are JPEG, PNG, GIF, BMP and ICO)
                    </h3>
                    <input type="file" name="file" id="upload_item_picture_input"/>
                </div>
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <div class="header_background">
                                    <abbr class="WhatsThis" title="This is the location you want the renter to arrive to pick up your item. This information will be accessible by the public as it will be published as part of your listing. ">What's This?</abbr>
                                    <!--a id="Whats_Pickup_Location" class="WhatsThis" href="#">
                                        What's This?
                                    </a-->
                                    <h2 class="box_header">
                                        Pickup Location
                                    </h2>
                                </div>
                            </td>
                            <td class="right_col">
                                <div id="Black_Out_Dates_Header" class="header_background">
                                    <abbr class="WhatsThis" title="These are dates when you don't want anyone to rent your item out, in case you're using the item on that date.">What's This?</abbr>
                                    <!--a id="Whats_Blackout_Dates" class="WhatsThis" href="#">
                                        What's This?
                                    </a-->
                                    <h2 class="box_header">
                                        Blackout Dates
                                    </h2>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div id="Pickup_Location_Box" class="form_background">
                                    <!--div id="pickup_location_guide" class="guide_container_hidden">
                                        This is the location you want the renter to arrive to pick up your item. This information will be accessible by the public as it will be published as part of your listing. 
                                    </div-->

                                    <!--div class="editor-label">
                                        @Html.LabelFor(m => m.PickupLocation.StreetAddress1)
                                    </div-->
                                    <div class="form_field">
                                        <input type="text" name="PLStreetAddress1" id="PLStreetAddress1" placeholder="Address 1" value="@Model.PickupLocation.StreetAddress1"/>
                                        @Html.ValidationMessageFor(m => m.PickupLocation.StreetAddress1)
                                    </div>
            
                                    <!--div class="editor-label">
                                        @Html.LabelFor(m => m.PickupLocation.StreetAddress2)
                                    </div-->
                                    <div class="form_field">
                                        <input type="text" name="PLStreetAddress2" id="PLStreetAddress2" placeholder="Address 2" value="@Model.PickupLocation.StreetAddress2"/>
                                        @Html.ValidationMessageFor(m => m.PickupLocation.StreetAddress2)
                                    </div>

                                    <!--div class="editor-label">
                                        @Html.LabelFor(m => m.PickupLocation.City)
                                    </div-->
                                    <div class="form_field">
                                        <input type="text" name="PLCity" id="PLCity" placeholder="City" value="@Model.PickupLocation.City"/>
                                        @Html.ValidationMessageFor(m => m.PickupLocation.City)
                                    </div>

                                    <!--div class="editor-label">
                                        @Html.LabelFor(m => m.ItemRegion.Name)
                                    </div-->
                                    <div class="form_dropdown">
                                        @Html.DropDownList("RegionId", regionList, "Province", new { onchange = "RegionColour()" })
                                        @Html.ValidationMessageFor(m => m.ItemRegion.Id)
                                    </div>
			
		                            <!--div class="editor-label">
                                        @Html.LabelFor(m => m.PickupLocation.PostalCode)
                                    </div-->

                                    <div class="form_field">
                                        <input type="text" name="PLPostalCode" id="PLPostalCode" placeholder="Postal Code" value="@Model.PickupLocation.PostalCode"/>
                                        @Html.ValidationMessageFor(m => m.PickupLocation.PostalCode)
                                    </div>
                                </div>
                            </td>
                            <td class="right_col">
                                <div id="Blackout_Dates_Box" class="form_background">
                                    <!--div class="editor-label">
                                        @Html.LabelFor(m => m.BlackoutDates)
                                    </div-->
                                    <div class="form_field">
                                        <div id="multiple_datepicker"></div>
                                        <input id="datepicker" name="datepicker" type="hidden" />
                                    </div>
                        
                                    <!--div id="blackout_dates_guide" class="guide_container_hidden">
                                        These are dates when you don't want anyone to rent your item out, in case you're using the item on that date. 
                                    </div-->
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="btn_edititem_page">
                    <input type="submit" value="Update" />
                </div>
            </div>
        </div>
    </div>
}

<script src="@Url.Content("~/Scripts/dropdown-colour.js")" type="text/javascript"></script>
<script type="text/javascript">
    var addedDates;
    var disabledDates;
    var imageCount = @(Model.ItemImages.Count());

    function renderDatePicker(adates, ddates) {
        if (adates.length == 0) {
            $("#multiple_datepicker").multiDatesPicker({
                altField: '#datepicker'
            });
        }
        else {
            $("#multiple_datepicker").multiDatesPicker({
                altField: '#datepicker',
                addDates: addedDates
                //addDisabledDates: disabledDates
            });
        }
    }

    $(function () {
        $("#item_pictures a").click(function () {
            var imageToDelete = $(this).attr("data_id");
            imageCount--;

            $.post('@Url.Content("~/Item/DeleteImageFromItem")',
                {
                    "id": $("#ItemID-" + imageToDelete).attr("value"),
                    "image": $("#ImageID-" + imageToDelete).attr("value")
                },
                function (data) {
                    // Successful requests get here
                    // Update the page elements
                    if (data.Value == false) {
                        $("#image-" + imageToDelete).parent().fadeOut('slow', function () {
                            if (imageCount == 0) {
                                $('#item_thumbnail_container_last').html("<p id=\"no_images_left_message\">You've deleted all images of @Model.Name</p>");
                            }
                        });
                        /*$("#image-" + imageToDelete).parent().fadeOut('slow', function () {
                        if ($("#image-" + imageToDelete).parent().attr('id') == "item_thumbnail_container_last") {
                        $("#image-" + imageToDelete).parent().prev().prev().prev().attr('id', 'item_thumbnail_container_last');
                        }
                        });
                        $('#update-message').text(data.Message);*/
                    }
                }
            );
        });
    });


    $(function () {
        $.post('@Url.Content("~/Item/GetBlackOutDates/" + Model.Id)', function (data) {
            //call back happens here.
            addedDates = data;
            $.post('@Url.Content("~/Item/GetBookedDates/" + Model.Id)', function (data) {
                //call back happens here.
                disabledDates = data;
                renderDatePicker(addedDates, disabledDates);
            });
        });

        CategoryColour();
        //AgreementColour();
        RegionColour();

        $('.WhatsThis').click(function (event) {
            event.preventDefault();
        });

        /*$('#Whats_Pickup_Location').click(function (event) {
            $('#pickup_location_guide').fadeIn(250);
            $('#pickup_location_guide').removeAttr('class');
        });

        $('#Whats_Blackout_Dates').click(function (event) {
            $('#blackout_dates_guide').fadeIn(250);
            $('#blackout_dates_guide').removeAttr('class');
        });*/
    });
</script>